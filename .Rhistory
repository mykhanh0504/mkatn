ggtitle("Number of cotton rats by species and sex")+
xlab("Common name")+
ylab("Count")
library(ggplot2)
library(dplyr)
library(tidyr)
library(forcats)
library(palmerpenguins)
data("penguins")
View(penguins)
View(penguins_raw)
str(penguins)
summarise(penguins)
summary(penguins)
library(ggplot2)
library(dplyr)
library(tidyr)
library(forcats)
library(palmerpenguins)
data("penguins")
str(penguins)
summary(penguins)
library(ggplot2)
library(dplyr)
library(tidyr)
library(forcats)
library(palmerpenguins)
data("penguins")
str(penguins)
summary(penguins)
#Question 2
penguins %>% is.na()
penguins_clean <- penguins %>% drop_na()
View(penguins_clean)
#Question 3
Adelie <- penguins_clean %>%
filter(species=="Adelie") %>%
group_by(island) %>%
summarize(mean_bodymass=mean(body_mass_g))
View(Adelie)
#Question 4
penguins_clean %>%
ggplot(aes(flipper_length_mm,body_mass_g))+
geom_point(color=species)
#Question 4
penguins_clean %>%
ggplot(aes(x=flipper_length_mm,y=body_mass_g))+
geom_point(color=species)
#Question 4
penguins_clean %>%
ggplot(aes(x=flipper_length_mm,y=body_mass_g))+
geom_point()
aes()
ggplot()
?aes
#Question 4
penguins_clean %>%
ggplot()+
geom_point(aes(flipper_length_mm,body_mass_g),color=species)
View(penguins_clean)
?geom_point
#Question 4
penguins_clean %>%
ggplot(aes(x=flipper_length_mm,y=body_mass_g,color=species))+
geom_point()
?mutate
#Question 5
penguins_clean <- penguins_clean %>%
mutate(mass_to_flipper_ratio=body_mass_g/flipper_length_mm)
View(penguins_clean)
#Question 6
penguins_clean %>% pivot_longer(names_to = 'Variable',
values_to = 'Value')
#Question 6
penguins_clean %>% pivot_longer(names_to = 'Variable',
values_to = 'Value',
cols=-c(species,island,sex,year))
#Question 7
penguins_clean <- penguins_clean %>%
mutate(species=as.factor(species)) %>%
mutate(species=fct_relevel(species,"Chinstrap","Gentoo","Adelie"))
View(penguins_clean)
#Question 8
penguins_clean %>% ggplot(aes(species,body_mass_g)) +
geom_boxplot()
#Question 1
library(ggplot2)
library(dplyr)
library(tidyr)
library(forcats)
library(palmerpenguins)
data("penguins")
str(penguins)
summary(penguins)
#Question 2
penguins %>% is.na()
penguins_clean <- penguins %>% drop_na()
#Question 3
Adelie <- penguins_clean %>%
filter(species=="Adelie") %>%
group_by(island) %>%
summarize(mean_bodymass=mean(body_mass_g))
#Question 4
penguins_clean %>%
ggplot(aes(x=flipper_length_mm,y=body_mass_g,color=species))+
geom_point()
#Question 5
penguins_clean <- penguins_clean %>%
mutate(mass_to_flipper_ratio=body_mass_g/flipper_length_mm)
#Question 6
long <- penguins_clean %>% pivot_longer(names_to = 'Variable',
values_to = 'Value',
cols=-c(species,island,sex,year))
#Question 7
penguins_clean <- penguins_clean %>%
mutate(species=as.factor(species)) %>%
mutate(species=fct_relevel(species,"Chinstrap","Gentoo","Adelie"))
penguins_clean %>% ggplot(aes(species,body_mass_g)) +
geom_boxplot()
#Question 8
penguins_clean %>% ggplot(aes(species,body_mass_g)) +
geom_boxplot(color=species)
#Question 8
penguins_clean %>% ggplot(aes(species,body_mass_g,color=species)) +
geom_boxplot()
#Question 8
penguins_clean %>% ggplot(aes(species,body_mass_g,color=species)) +
geom_boxplot()+
ggtitle("Body mass distribution for each species")+
xlab("Species")+
ylab("Body mass (g)")+
labs(color="Species")
View(penguins_clean)
#Question 9
dream <- penguins_clean %>% filter(islands=="Dream") %>%
group_by(species) %>%
summarise(avg_bl=mean(bill_length_mm))
#Question 9
dream <- penguins_clean %>% filter(island=="Dream") %>%
group_by(species) %>%
summarise(avg_bl=mean(bill_length_mm))
dream %>% ggplot(aes(species,avg_bl))+
geom_bar()
View(dream)
rlang::last_trace()
dream %>% ggplot(aes(species,avg_bl))+
geom_col()
dream %>% ggplot(aes(avg_bl))+
geom_bar()
dream %>% ggplot(aes(species))+
geom_bar()
?geom_bar
dream %>% ggplot(aes(species,avg_bl))+
geom_col()
#Question 10
penguins_clean <- ggplot(aes(bill_length_mm,bill_depth_mm))+
geom_point()
#Question 1
library(ggplot2)
library(dplyr)
library(tidyr)
library(forcats)
library(palmerpenguins)
data("penguins")
str(penguins)
summary(penguins)
#Question 2
penguins %>% is.na()
penguins_clean <- penguins %>% drop_na()
#Question 3
Adelie <- penguins_clean %>%
filter(species=="Adelie") %>%
group_by(island) %>%
summarize(mean_bodymass=mean(body_mass_g))
#Question 4
penguins_clean %>%
ggplot(aes(x=flipper_length_mm,y=body_mass_g,color=species))+
geom_point()
#Question 5
penguins_clean <- penguins_clean %>%
mutate(mass_to_flipper_ratio=body_mass_g/flipper_length_mm)
#Question 6
long <- penguins_clean %>% pivot_longer(names_to = 'Variable',
values_to = 'Value',
cols=-c(species,island,sex,year))
#Question 7
penguins_clean <- penguins_clean %>%
mutate(species=as.factor(species)) %>%
mutate(species=fct_relevel(species,"Chinstrap","Gentoo","Adelie"))
#Question 8
penguins_clean %>% ggplot(aes(species,body_mass_g,color=species)) +
geom_boxplot()+
ggtitle("Body mass distribution for each species")+
xlab("Species")+
ylab("Body mass (g)")+
labs(color="Species")
#Question 9
dream <- penguins_clean %>% filter(island=="Dream") %>%
group_by(species) %>%
summarise(avg_bl=mean(bill_length_mm))
dream %>% ggplot(aes(species,avg_bl))+
geom_col()
#Question 10
penguins_clean <- ggplot(aes(bill_length_mm,bill_depth_mm))+
geom_point()
#Question 10
penguins_clean %>% ggplot(aes(bill_length_mm,bill_depth_mm))+
geom_point()
#Question 10
penguins_clean %>% ggplot(aes(bill_length_mm,bill_depth_mm))+
geom_point(shape=species)+
facet_wrap(vars(island))
#Question 10
penguins_clean %>% ggplot(aes(bill_length_mm,bill_depth_mm))+
geom_point(aes(shape=species))+
facet_wrap(vars(island))
#Question 10
penguins_clean %>% ggplot(aes(bill_length_mm,bill_depth_mm))+
geom_point(aes(shape=species))+
facet_wrap(vars(island),scale=="free")
#Question 10
penguins_clean %>% ggplot(aes(bill_length_mm,bill_depth_mm))+
geom_point(aes(shape=species))+
facet_wrap(vars(island),scale="free")
#Question 10
penguins_clean %>% ggplot(aes(bill_length_mm,bill_depth_mm))+
geom_point(aes(shape=species))+
geom_smooth(method=lm)+
facet_wrap(vars(island),scale="free")
?geom_smooth
#Question 10
penguins_clean %>% ggplot()+
aes(bill_length_mm,bill_depth_mm,col=species)+
geom_point(aes(shape=species))+
geom_smooth(method=lm)+
facet_wrap(vars(island),scale="free")
#Question 10
penguins_clean %>% ggplot()+
aes(bill_length_mm,bill_depth_mm,col=species)+
geom_point(aes(shape=species))+
geom_smooth(method=lm)+
facet_wrap(vars(island),scale="free")+
ggtitle("Relationship between bill length and depth")+
xlab("Bill length (mm)")+
ylab("Bill depth (mm)")+
labs(color="Species")
#Question 10
penguins_clean %>% ggplot()+
aes(bill_length_mm,bill_depth_mm,col=species)+
geom_point(aes(shape=species))+
geom_smooth(method=lm)+
facet_wrap(vars(island),scale="free")+
ggtitle("Relationship between bill length and depth")+
xlab("Bill length (mm)")+
ylab("Bill depth (mm)")+
labs(color="Species", shape="Species")
dream <- penguins_clean %>% filter(island=="Dream") %>%
group_by(species) %>%
summarise(avg_bl=mean(bill_length_mm))
dream %>% ggplot(aes(species,avg_bl))+
geom_col()
dream %>% ggplot(aes(species,avg_bl))+
geom_col()+
ggtitle(Average bill length by species)+
dream %>% ggplot(aes(species,avg_bl))+
geom_col()+
ggtitle("Average bill length by species")+
xlab("Species")+
ylab("(mm)")
#Question 10
penguins_clean %>% ggplot()+
aes(bill_length_mm,bill_depth_mm,col=species)+
geom_point(aes(shape=species))+
geom_smooth(method=lm)+
facet_wrap(vars(island),scale="free")+
ggtitle("Relationship between bill length and depth")+
xlab("Bill length (mm)")+
ylab("Bill depth (mm)")+
labs(color="Species", shape="Species")
dream %>% ggplot(aes(species,avg_bl))+
geom_col(col=species)+
ggtitle("Average bill length by species")+
xlab("Species")+
ylab("(mm)")
dream %>% ggplot(aes(species,avg_bl))+
geom_col()+
ggtitle("Average bill length by species")+
xlab("Species")+
ylab("(mm)")
library(ggplot2)
library(dplyr)
library(tidyr)
library(forcats)
library(palmerpenguins)
data("penguins")
str(penguins)
summary(penguins)
penguins %>% is.na()
penguins_clean <- penguins %>% drop_na()
?is.na
#Question 2
penguins %>% is.na.data.frame()
#Question 2
penguins %>% anyNA()
penguins %>% anyNA()
?anyNA
#LOAD PACKAGES
library(tidyverse)
library(lubridate)
#LOAD PACKAGES
library(tidyverse)
library(lubridate)
download.file(url='https://www.ndbc.noaa.gov/data/realtime2/BGXN3.txt',
destfile = 'greatbay.txt')
write.csv(x = read.csv(file = 'greatbay.txt', header = TRUE, sep='')[-1,],file = 'greatbay.txt', quote=FALSE, row.names = FALSE)
greatbay <- read.csv(file = 'greatbay.txt', header = TRUE)
View(greatbay)
?lubridate
View(greatbay)
greatbay %>% mutate(datetime=ymd_hm())
?mutate
library(dplyr)
?ymd_hm
greatbay %>% mutate(datetime=ymd_hm("2024-09-26 16:45"))
datetime <- greatbay %>%
mutate(datetime=ymd_hm("2024-09-26 16:45"))
View(datetime)
?mutate
?ymd_hms
datetime <- greatbay %>%
mutate(datetime=ymd_hm("2024-09-26 16:45")-minutes(15))
View(datetime)
dt <- greatbay %>%
mutate(datetime=ymd_hm("2024-09-26 16:45")+minutes(15))
#LOAD PACKAGES
library(tidyverse)
library(lubridate)
library(dplyr)
download.file(url='https://www.ndbc.noaa.gov/data/realtime2/BGXN3.txt',
destfile = 'greatbay.txt')
write.csv(x = read.csv(file = 'greatbay.txt', header = TRUE, sep='')[-1,],file = 'greatbay.txt', quote=FALSE, row.names = FALSE)
greatbay <- read.csv(file = 'greatbay.txt', header = TRUE)
dt <- greatbay %>%
mutate(datetime=ymd_hm("2024-09-26 16:45")+minutes(15))
View(dt)
new <- greatbay %>%
mutate(datetime=interval(dt,dt-minutes(15)))
rlang::last_trace()
interval(dt,dt-minutes(15)))
interval(dt,dt-minutes(15))
dt <- as_datetime("2024-09-26 16:45")
View(greatbay)
?make_datetime
greatbay <- greatbay %>%
make_datetime(year=X.YY,month=MM,day=DD,hour=hh,minute=mm)
greatbay <- greatbay %>%
make_datetime(year=X.YY,month=MM,day=DD,hour=hh,min=mm)
greatbay <- greatbay %>%
mutate(date=make_datetime(year=X.YY,month=MM,day=DD,hour=hh,min=mm))
View(greatbay)
with_tz()
?with_tz
greatbay <- greatbay %>%
mutate(date=with_tz(date,"EST"))
View(greatbay)
greatbay <- greatbay %>%
mutate(date=with_tz(date,"EDT"))
View(greatbay)
greatbay <- greatbay %>%
mutate(date=with_tz(date,"EST"))
?dminutes
?make_difftime
?Sys.time
#Question 3
greatbay <- greatbay %>%
mutate(timediff=Sys.time()-date)
View(greatbay)
#Question 3
greatbay <- greatbay %>%
mutate(timediff=difftime(Sys.time(),date,units='mins'))
View(greatbay)
#Question 4
greatbay %>% ggplot(aes(date,ATMP))+
geom_point()
#Question 4
greatbay %>% ggplot(aes(date,ATMP))+
geom_point()+geom_line()
#Question 4
greatbay %>% ggplot(aes(date,ATMP))+
geom_line()
#Question 4
greatbay %>% ggplot(aes(date,ATMP))+
geom_point()+
geom_line()
#Question 5
greatbay <- greatbay %>%
mutate(ymd=make_date(year=X.YY,month=MM,day=DD))
View(greatbay)
greatbay %>% group_by(ymd) %>%
summarize(dailymean=mean(ATMP)) %>%
ggplot(aes(date,dailymean))+
geom_point()+
geom_line()
greatbay %>% group_by(ymd) %>%
summarize(dailymean=mean(ATMP)) %>%
ggplot(aes(date,dailymean))+
geom_line()
greatbay %>% group_by(ymd) %>%
summarize(dailymean=mean(ATMP))
dailymean <- greatbay %>% group_by(ymd) %>%
summarize(dailymean=mean(ATMP))
View(dailymean)
dailymean %>% ggplot(aes(ymd,dailymean))+
geom_point()+
geom_line()
#Question 4
greatbay %>% ggplot(aes(date,ATMP))+
geom_point()+
geom_line()
#Question 4
greatbay %>% ggplot(aes(date,ATMP))+
geom_point()+
geom_line()+
xlab("Date")+
ylab("Air temperature (C)")
dailymean %>% ggplot(aes(ymd,dailymean))+
geom_point()+
geom_line()
dailymean %>% ggplot(aes(ymd,dailymean))+
geom_point()+
geom_line()+
xlab("Date")+
ylab("Mean air temperature (C)")
View(greatbay)
#Question 6
seadew <- greatbay %>% group_by(ymd) %>%
summarize(meansea=mean(WTMP),
meandew=mean(DEWP))
airdew %>% ggplot(aes(meanair,meandew))+
geom_point()
airdew <- greatbay %>% group_by(ymd) %>%
summarize(meanair=mean(ATMP),
meandew=mean(DEWP))
airdew %>% ggplot(aes(meanair,meandew))+
geom_point()
airdew %>% ggplot(aes(meanair,meandew))+
geom_point()+
geom_smooth()
airdew %>% ggplot(aes(meanair,meandew))+
geom_point()+
geom_smooth(lm)
airdew %>% ggplot(aes(meanair,meandew))+
geom_point()+
geom_smooth(method=lm)
pressdew <- greatbay %>% group_by(ymd) %>%
summarize(meanpress=mean(PRES),
meandew=mean(DEWP))
pressdew %>% ggplot(aes(meanpress,meandew))+
geom_point()+
geom_smooth(method=lm)
pressdew %>% ggplot(aes(meanpress,meandew))+
geom_point()
pressdew <- greatbay %>% group_by(ymd) %>%
summarize(meanpress=mean(PRES),
meandew=mean(DEWP))
pressdew %>% ggplot(aes(meanpress,meandew))+
geom_point()
winddew <- greatbay %>% group_by(ymd) %>%
summarize(meanwind=mean(WDSP),
meandew=mean(DEWP))
winddew <- greatbay %>% group_by(ymd) %>%
summarize(meanwind=mean(WSPD),
meandew=mean(DEWP))
winddew %>% ggplot(aes(meanwind,meandew))+
geom_point()
winddew %>% ggplot(aes(meanwind,meandew))+
geom_point()+
geom_smooth()
winddew %>% ggplot(aes(meanwind,meandew))+
geom_point()+
geom_smooth(method=lm)
winddew %>% ggplot(aes(meanwind,meandew))+
geom_point()
winddew <- greatbay %>% group_by(ymd) %>%
summarize(maxwind=max(WSPD),
meandew=mean(DEWP))
winddew %>% ggplot(aes(maxwind,meandew))+
geom_point()
winddew %>% ggplot(aes(maxwind,meandew))+
geom_point()+
xlab("Daily maximum windspeed (m/s)")+
ylab("Daily average dewpoint temperature (C)")
quarto install tinytex
library(tinytex)
install.packages("usethis")
use_git_config(user.name="mykhanh0504",user.email="mykhanhtonnu54@gmail.com")
library(usethis)
use_git_config(user.name="mykhanh0504",user.email="mykhanhtonnu54@gmail.com")
git_default_branch_configure()
create_github_token()
install.packages("gitcreds")
library(gitcreds)
gitcreds_set()
gitcreds::gitcreds_set()
gitcreds_set()
?gitcreds_set
gitcreds::gitcreds_get()
gitcreds::gitcreds_set()
setwd("C:/Users/mykha/OneDrive/Desktop/mkatn")
rmarkdown::render_site()
rmarkdown::render_site()
file.create(".nojekyll")
